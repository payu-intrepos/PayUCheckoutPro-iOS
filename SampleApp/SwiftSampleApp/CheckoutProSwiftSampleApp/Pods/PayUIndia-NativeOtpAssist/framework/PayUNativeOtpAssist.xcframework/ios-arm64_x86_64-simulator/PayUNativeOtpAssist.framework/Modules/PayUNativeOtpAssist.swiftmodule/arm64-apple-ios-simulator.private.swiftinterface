// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name PayUNativeOtpAssist
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import CoreTelephony
import DeveloperToolsSupport
import Foundation
import PayUAnalyticsKit
import PayUCommonUI
import PayUCrashReporter
@_exported import PayUNativeOtpAssist
import PayUNetworkReachability
import PayUParamsKit
import SafariServices
import Swift
import SwiftUI
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension PayUParamsKit.PayUError {
  @objc dynamic public var formattedErrorCode: Swift.String {
    @objc get
  }
  @objc dynamic public var formattedErrorDescription: Swift.String {
    @objc get
  }
  @objc dynamic public var isKindOfPaymentFailure: Swift.Bool {
    @objc get
  }
  @objc dynamic public var isKnownError: Swift.Bool {
    @objc get
  }
}
@objc public protocol PayUOtpAssistAPIProtocol {
  @objc func initiatePayment(paymentParam: PayUParamsKit.PayUPaymentParam, completion: @escaping (_ response: PayUParamsKit.PayUVerifyPayment?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func initiatePayment(postData: Swift.String, completion: @escaping (_ response: PayUParamsKit.PayUVerifyPayment?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func submitOTP(otp: Swift.String, completion: @escaping (_ response: PayUParamsKit.PayUVerifyPayment?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func resendOTP(completion: @escaping (_ response: PayUParamsKit.PayUVerifyPayment?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func cancelTransaction(completion: @escaping (_ response: PayUParamsKit.PayUVerifyPayment?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func cancelWebViewTransaction(cookies: [Foundation.HTTPCookie], completion: @escaping (_ response: Any?, _ error: (any Swift.Error)?) -> Swift.Void)
  @objc func checkTransactionStatus(paymentParam: PayUParamsKit.PayUPaymentParam, completion: @escaping (_ response: PayUParamsKit.PayUModelAPIResponse?, _ error: (any Swift.Error)?) -> Swift.Void)
}
@objc public protocol PayUOtpAssistDelegate {
  @objc func onPaymentSuccess(merchantResponse: Swift.String?, payUResponse: Swift.String?)
  @objc func onPaymentFailure(merchantResponse: Swift.String?, payUResponse: Swift.String?)
  @objc func onError(errorCode: Swift.String?, errorMessage: Swift.String?)
  @objc func onPaymentCancel(isTxnInitiated: Swift.Bool)
  @objc optional func shouldHandleFallback(payUAcsRequest: PayUNativeOtpAssist.PayUAcsRequest) -> Swift.Bool
  @objc optional func generateHash(for param: [Swift.String : Swift.String], onCompletion: @escaping (_ hashDict: [Swift.String : Swift.String]) -> Swift.Void)
}
@_inheritsConvenienceInitializers @objc public class PayUOtpAssistConfig : ObjectiveC.NSObject {
  @objc public var themeColor: UIKit.UIColor
  @objc public var secondaryColor: UIKit.UIColor
  @objc public var merchantLogo: UIKit.UIImage?
  @objc public var shouldShowMerchantSummary: Swift.Bool
  @objc public var merchantResponseTimeout: Swift.Int64
  @objc public var merchantLanguage: PayUParamsKit.PayULanguageCode
  @objc public var shouldShowSecureWebView: Swift.Bool
  @objc final public let showUserCancellationDialogue: Swift.Bool
  @objc public var fontfamily: PayUCommonUI.PayUFontFamily?
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIDevice {
  @_Concurrency.MainActor @preconcurrency public static let modelName: Swift.String
  @_Concurrency.MainActor @preconcurrency public static let signalStrength: Swift.Int?
}
@_inheritsConvenienceInitializers @objc public class PayUOtpAssist : ObjectiveC.NSObject {
  @objc public static func open(parentVC: UIKit.UIViewController, paymentParam: PayUParamsKit.PayUPaymentParam, config: PayUNativeOtpAssist.PayUOtpAssistConfig? = nil, delegate: any PayUNativeOtpAssist.PayUOtpAssistDelegate)
  @objc public static func open(parentVC: UIKit.UIViewController, postData: Swift.String, config: PayUNativeOtpAssist.PayUOtpAssistConfig? = nil, delegate: any PayUNativeOtpAssist.PayUOtpAssistDelegate)
  public static func start()
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayUOtpAssistHashConstants : ObjectiveC.NSObject {
  @objc public static let hashString: Swift.String
  @objc public static let hashType: Swift.String
  @objc public static let hashName: Swift.String
  @objc public static let postSalt: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayUAcsRequest : ObjectiveC.NSObject {
  @objc public var issuerPostData: Swift.String?
  @objc public var issuerUrl: Swift.String?
  @objc public var acsTemplate: Swift.String?
  @objc public var transactionId: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}

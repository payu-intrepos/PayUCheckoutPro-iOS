// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.2.4 (swiftlang-1103.0.32.9 clang-1103.0.32.53)
// swift-module-flags: -target arm64-apple-ios10.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name PayUCheckoutProBase
import Foundation
@_exported import PayUCheckoutProBase
import Swift
import UIKit
@objc @_inheritsConvenienceInitializers public class BaseAPIResponse : ObjectiveC.NSObject {
  public var error: Swift.Error?
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers public class FetchPaymentOptionResponse : PayUCheckoutProBase.BaseAPIResponse {
  @objc override dynamic public init()
  public var quickPaymentOption: [PayUCheckoutProBase.PaymentMode]?
  public var otherPaymentOption: [PayUCheckoutProBase.PaymentMode]?
  @objc deinit
}
@objc @objcMembers public class PayUPaymentParams : ObjectiveC.NSObject {
  @objc public var key: Swift.String
  @objc public var transactionId: Swift.String
  @objc public var amount: Swift.String
  @objc public var productInfo: Swift.String
  @objc public var firstName: Swift.String
  @objc public var email: Swift.String
  @objc public var phone: Swift.String
  @objc public var surl: Swift.String
  @objc public var furl: Swift.String
  @objc public var userCredential: Swift.String?
  @objc public var additionalParam: [Swift.String : Any]
  @objc public var environment: PayUCheckoutProBase.Environment
  @objc public init(key: Swift.String, transactionId: Swift.String, amount: Swift.String, productInfo: Swift.String, firstName: Swift.String, email: Swift.String, phone: Swift.String, surl: Swift.String, furl: Swift.String, environment: PayUCheckoutProBase.Environment)
  @objc deinit
  @objc override dynamic public init()
}
@objc public enum Environment : Swift.Int {
  case production = 0
  case test
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc @objcMembers public class PaymentMode : ObjectiveC.NSObject, Foundation.NSCopying {
  @objc public var modeName: Swift.String?
  @objc public var subHeading: Swift.String?
  @objc public var offerDetail: Swift.String?
  @objc public var paymentType: PayUCheckoutProBase.PaymentType
  @objc public var options: [PayUCheckoutProBase.PaymentOption]?
  @objc public var isDirectPaymentMode: Swift.Bool
  @objc public init(modeName: Swift.String? = nil, subHeading: Swift.String? = nil, offerDetail: Swift.String? = nil, paymentType: PayUCheckoutProBase.PaymentType, options: [PayUCheckoutProBase.PaymentOption]? = nil)
  @objc public convenience init(paymentType: PayUCheckoutProBase.PaymentType, paymentOptionID: Swift.String? = nil)
  @objc public class func getPaymentModeFrom(paymentModes: [PayUCheckoutProBase.PaymentMode]?, paymentType: PayUCheckoutProBase.PaymentType) -> PayUCheckoutProBase.PaymentMode?
  @objc public func copy(with zone: ObjectiveC.NSZone? = nil) -> Any
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PaymentOption : ObjectiveC.NSObject {
  @objc public var title: Swift.String?
  public var isDown: Swift.Bool?
  @objc public var offerDetail: Swift.String?
  @objc public var paymentOptionID: Swift.String?
  @objc public var customObj: Any?
  @objc public var paymentType: PayUCheckoutProBase.PaymentType {
    @objc get
  }
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class NetBanking : PayUCheckoutProBase.PaymentOption {
  @objc public var maskedAccountNumber: Swift.String?
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class CCDC : PayUCheckoutProBase.PaymentOption {
  @objc public var cardNumber: Swift.String?
  public var expiryMonth: Swift.Int?
  public var expiryYear: Swift.Int?
  @objc public var cvv: Swift.String?
  @objc public var nameOnCard: Swift.String?
  @objc public var cardAlias: Swift.String?
  @objc public var shouldSaveCard: Swift.Bool
  public var cardBinInfo: PayUCheckoutProBase.CardBinInfo?
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class SavedCard : PayUCheckoutProBase.CCDC {
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class UPI : PayUCheckoutProBase.PaymentOption {
  public var isCollect: Swift.Bool?
  @objc public var vpa: Swift.String?
  @objc public var scheme: Swift.String?
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class EMI : PayUCheckoutProBase.CCDC {
  @objc public var month: Swift.String?
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers @objcMembers public class Wallet : PayUCheckoutProBase.PaymentOption {
  @objc public var maskedAccountNumber: Swift.String?
  @objc public var phoneNumber: Swift.String?
  @objc deinit
  @objc override dynamic public init()
}
@objcMembers public class CardBinInfo {
  @objc public init()
  public var cardScheme: PayUCheckoutProBase.CardScheme?
  public var cardType: PayUCheckoutProBase.CardType?
  public var isDomestic: Swift.Bool?
  @objc public var bankName: Swift.String?
  @objc deinit
}
@objc public enum CardType : Swift.Int {
  case cc
  case dc
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum CardScheme : Swift.Int {
  case masterCard
  case visa
  case jcb
  case amex
  case maestro
  case rupay
  case discover
  case dinersClub
  case laser
  case stateBankMaestro
  case unknown
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum PaymentType : Swift.Int {
  case ccdc
  case savedCard
  case netBanking
  case upi
  case wallet
  case emi
  case other
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc @_inheritsConvenienceInitializers public class ImageParam : ObjectiveC.NSObject {
  public var paymentOption: PayUCheckoutProBase.PaymentOption?
  public var isForCardScheme: Swift.Bool
  @objc deinit
  @objc override dynamic public init()
}
public typealias DictOfString = [Swift.String : Swift.String]
public typealias PayUHashGenerationCompletion = (PayUCheckoutProBase.DictOfString) -> ()
public typealias FetchPaymentOptionCompletion = (PayUCheckoutProBase.FetchPaymentOptionResponse) -> ()
public typealias GetBinInfoOfCard = (PayUCheckoutProBase.CardBinInfo?, Swift.Error?) -> ()
public typealias ErrorCompletion = (Swift.Error?) -> ()
public typealias ImageCompletion = (UIKit.UIImage?) -> ()
public typealias CheckEligibilityCompletion = (PayUCheckoutProBase.CheckEligibilityResponse) -> ()
@objc public protocol OnePayUBaseLayerDelegate : AnyObject {
  @objc func paymentSuccess(response: Any?)
  @objc func paymentFailure(response: Any?)
  @objc func paymentCancelled(response: Any?, fromPaymentScreen: Swift.Bool)
  @objc func error(_ error: Swift.Error?)
  @objc func getHash(for param: PayUCheckoutProBase.DictOfString, onCompletion: @escaping PayUCheckoutProBase.PayUHashGenerationCompletion)
  @objc func nextStep(_ nextStep: PayUCheckoutProBase.NextStep?)
}
@objc public protocol OnePayUBaseIndividualPaymentDelegate : AnyObject {
  @objc func upiCollectTransactionRemainingTime(_ remainingTime: Swift.Int)
}
@objc @objcMembers open class BaseLayer : ObjectiveC.NSObject {
  @objc open var basePaymentParam: PayUCheckoutProBase.PayUPaymentParams
  @objc weak open var delegate: PayUCheckoutProBase.OnePayUBaseLayerDelegate?
  @objc weak open var individualPaymentDelegate: PayUCheckoutProBase.OnePayUBaseIndividualPaymentDelegate?
  @objc public init(paymentParam: PayUCheckoutProBase.PayUPaymentParams)
  @objc open func fetchPaymentOptions(onCompletion: @escaping PayUCheckoutProBase.FetchPaymentOptionCompletion)
  @objc open func makePayment(paymentOption: PayUCheckoutProBase.PaymentOption, screenState: PayUCheckoutProBase.ScreenState = .none, onViewController: UIKit.UIViewController, onError: @escaping PayUCheckoutProBase.ErrorCompletion)
  @objc open func cancelCurrentPayment() -> Swift.Bool
  open func getBinInfoOf(cardNumber: Swift.String, onCompletion: @escaping PayUCheckoutProBase.GetBinInfoOfCard)
  @objc open func image(of imageParam: PayUCheckoutProBase.ImageParam, onCompletion: @escaping PayUCheckoutProBase.ImageCompletion)
  @objc open func checkEligibility(paymentOption: PayUCheckoutProBase.PaymentOption, onCompletion: @escaping PayUCheckoutProBase.CheckEligibilityCompletion)
  @objc deinit
  @objc override dynamic public init()
}
@objc public enum ScreenState : Swift.Int {
  case none
  case phoneNumberScreen
  case vpaEntry
  case upiIntentProcessing
  case upiCollectProcessing
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc public class NextStep : ObjectiveC.NSObject {
  public var screenState: PayUCheckoutProBase.ScreenState
  @objc deinit
  @objc override dynamic public init()
}
@objc @_inheritsConvenienceInitializers public class CheckEligibilityResponse : PayUCheckoutProBase.BaseAPIResponse {
  @objc override dynamic public init()
  public var status: Swift.Bool?
  public var apiFailed: Swift.Bool?
  public var successMsg: Swift.String?
  public var failureMsg: Swift.String?
  @objc deinit
}
